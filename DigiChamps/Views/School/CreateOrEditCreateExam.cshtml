@model DigiChamps.Models.SchoolModel.CreateExamModel

@{
    ViewBag.Title = "Create Or Edit Exam";
    Layout = "~/Views/Shared/_SchoolLayout.cshtml";
}

@*<style>
    .input-validation-error {
        border-color: #b94a48;
    }

    .field-validation-error {
        display: block;
        font-size: 11px;
        font-weight: 700;
        color: #C62626;
    }
</style>*@

@using (Html.BeginForm("CreateOrEditCreateExam", "School", FormMethod.Post, new { @class = "form-horizontal", id = "validation-form" }))
{
   
        <div class="row">
            <div class="col-md-12">
                <div class="box">
                    <div class="box-title">
                        <h3><i class="fa fa-file"></i> CreateExam</h3>

                    </div>
                    <div class="box-content">

                        <div class="form-group">
                            <label for="textfield5" class="col-sm-3  control-label">Select Class<span class="asterisk">*</span></label>
                            <div class="col-sm-9  controls">

                               @(Html.DropDownListFor(x => x.Class_Id, ViewBag.ClassList as SelectList, "Please Select Class", new { @class = "form-control", @id = "ddlClass", data_rule_required = "true", data_msg_required = "Please select class" }))                                
                                @Html.ValidationMessageFor(x => x.Class_Id)
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="textfield5" class="col-sm-3  control-label">Select ExamType<span class="asterisk">*</span></label>
                            <div class="col-sm-9  controls">

                                    @(Html.DropDownListFor(x => x.ExamType, ViewBag.ExamType_Id as SelectList, "Please Select ExamType", new { @class = "form-control", @id = "ddlExamType", data_rule_required = "true", data_msg_required = "Please Select ExamType" }))
                                    @Html.HiddenFor(x => x.ExamType)
                                    @Html.ValidationMessageFor(x => x.ExamType)
                              




                            </div>
                        </div>
                        <div class="form-group">
                            <label for="textfield5" class="col-sm-3  control-label">Select Subject<span class="asterisk">*</span></label>
                            <div class="col-sm-9  controls">

                              
                                    @(Html.DropDownListFor(x => x.SubjectId, ViewBag.Subject_Id as SelectList, "Please Select Subject", new { @class = "form-control", @id = "ddlSubject", data_rule_required = "true", data_msg_required = "Please select subject" }))
                                    @Html.HiddenFor(x => x.SubjectId)
                                @Html.ValidationMessageFor(x => x.SubjectId)                               

                            </div>
                        </div>

                        <div class="form-group input-cont">
                            <label for="textfield5" class="col-sm-3  control-label">Exam Date<span class="asterisk">*</span></label>
                            <div class="col-sm-9  controls">
                                @*<input type="text" name="EmailAddress" id="EmailAddress" value="@Model.StartDate" class="form-control" data-rule-required="true" data-msg-required="Please enter user name">*@
                                @*<input type="text" placeholder="Plaese select date" class="form-control datepicker"  name="StartDate" autocomplete="off" data-rule-required="true" data-msg-required="Please select date" onkeypress="return false;" />*@
                                @Html.TextBoxFor(x => x.DateofExam, new { placeholder = "Plaese select date", @class = "form-control", @readonly = "readonly", data_rule_required = "true", data_msg_required = "Please select exam date" })
                                @Html.ValidationMessageFor(x => x.DateofExam)
                                @*@Html.DropDownListFor(x => x.Gender, new List<SelectListItem> { new SelectListItem { Text = "Male", Value = "Male" }, new SelectListItem { Text = "Female", Value = "Female" } }, " Select ", new { @class = "form-control", data_rule_required = "true", data_msg_required = "Please select gender" })
                                    @*}*@
                            </div>
                        </div>

                        <div class="form-group input-cont">
                            <label for="textfield5" class="col-sm-3  control-label">Time Slot<span class="asterisk">*</span></label>
                            <div class="col-sm-9 controls" id="basicExample">
                                @Html.TextBoxFor(x => x.StartTimeSlot, new {  placeholder = "Plaese select start time", @class = "form-control Starttimepicker", data_rule_required = "true", data_msg_required = "Please select start time" })
                                @Html.TextBoxFor(x => x.EndTimeSlot, new {  placeholder = "Plaese select end time", @class = "form-control Starttimepicker", data_rule_required = "true", data_msg_required = "Please select end time" })
                                @Html.ValidationMessageFor(x => x.StartTimeSlot)
                                @Html.ValidationMessageFor(x => x.EndTimeSlot)
                                @*<input type="text" name="Starttimepicker" id="Starttimepicker" placeholder="Select Time slot" class="Starttimepicker" data-rule-required="true" data-msg-required="Please enter time">
                                <input type="text" name="Endtimepicker" id="Endtimepicker" placeholder="Select Time slot" class="Endtimepicker" data-rule-required="true" data-msg-required="Please enter time">*@
                                @Html.HiddenFor(x => x.TimeSlot)
                            </div>
                        </div>




                        @*Crop image in modal*@


                        <div class="form-group last box-tooll">
                            <div class="col-sm-9 col-sm-offset-3 col-lg-7 col-lg-offset-2">
                                <a href="@Url.Action("GetExam", "School", new { id = new Guid(Session["id"].ToString()) })" class="btn btn-primary"><i class="fa fa-undo"></i> <span>Back</span> </a>
                                <button id="btnaddExam" type="submit" class="btn btn-primary btn-success"><i class="fa fa-check green-i"></i><span> Submit</span></button>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>

}

<link rel="stylesheet" type="text/css" href="http://weareoutman.github.io/clockpicker/dist/jquery-clockpicker.min.css">
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

@*<script src="~/Student_assets/crop/scripts/jquery.min.js"></script>*@

@*<link rel="stylesheet" type="text/css" href="https://jonthornton.github.io/jquery-timepicker/jquery.timepicker.css" />*@
@section scripts {
    @*<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">*@
        @*<script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>*@
    @*<script src="http://jonthornton.github.io/Datepair.js/dist/datepair.js"></script>
    <script src="http://jonthornton.github.io/Datepair.js/dist/jquery.datepair.js"></script>*@

@*<script src="https://jonthornton.github.io/jquery-timepicker/jquery.timepicker.js"></script>
<script src="http://jonthornton.github.io/Datepair.js/dist/datepair.js"></script>*@

@*<script src="~/Student_assets/crop/scripts/jquery.min.js"></script>*@
@*<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
<script src="http://weareoutman.github.io/clockpicker/dist/jquery-clockpicker.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        var isChanged = false;
        $(document).ready(function () {
            //jQuery(document).ajaxStart(function () {
            //    ajaxindicatorstart('loading data.. please wait..');
            //}).ajaxStop(function () {
            //    ajaxindicatorstop();
            //});

            var input = $('#StartTimeSlot');
            input.clockpicker({
                autoclose: true
            });

            var endinput = $('#EndTimeSlot');
            endinput.clockpicker({
                autoclose: true
            });

            //$("#DateofExam").datepicker({
            //    dateFormat: "dd/mm/yy",
            //    //format: 'mm-dd-yyyy',
            //    minDate:new Date(),
            //    autoclose: true
            //});
            //$('#DateofExam').datetimepicker({  minDate:new Date()});
            $("#DateofExam").datepicker({
                minDate:0
            });

            //$('.Starttimepicker').timepicker({
            //    timeFormat: 'h:mm p',
            //    interval: 60,
            //    minTime: '10',
            //    maxTime: '6:00pm',
            //    startTime: '10:00',
            //    dynamic: false,
            //    dropdown: true,
            //    scrollbar: true
            //});

            //$('.Endtimepicker').timepicker({
            //    timeFormat: 'h:mm p',
            //    interval: 60,
            //    minTime: '10',
            //    maxTime: '6:00pm',
            //    startTime: '10:00',
            //    dynamic: false,
            //    dropdown: true,
            //    scrollbar: true
            //});

            //$('.Starttimepicker').timepicker({
            //    'showDuration': true,
            //    'timeFormat': 'g:ia'
            //});
            //$('.Endtimepicker').timepicker({
            //    'showDuration': true,
            //    'timeFormat': 'g:ia'
            //});

            //var basicExampleEl = document.getElementById('basicExample');
            //var datepair = new Datepair(basicExampleEl);

            $("#btnaddExam").click(function () {
                $("#TimeSlot").val($("#StartTimeSlot").val() + "-" + $("#EndTimeSlot").val());
            });
            $('#validation-form').submit(function (e) {

                var status = true;

               
                if ($('#StartTimeSlot') != null && $('#StartTimeSlot').val() != "" && $('#EndTimeSlot') != null && $('#EndTimeSlot').val() != "") {
                    debugger;
                    var fromTime = $('#StartTimeSlot').val(); // format hh:mm
                    var toTime = $('#EndTimeSlot').val();
                    var ft = fromTime.split(":");
                    var tt = toTime.split(":");
                    var OK = false;
                    if (tt[0] > ft[0]) { OK = true }
                    if ((tt[0] == ft[0]) && (tt[1] > ft[1])) { OK = true }
                    if (OK) {
                        //alert("The second time is after the first time");
                        //var hr = tt[0] - ft[0];
                        //var mn = tt[1] - ft[1];
                        //if (mn < 0) { mn = mn + 60; hr = hr - 1 }
                        //if (mn < 10) { mn = "0" + mn }
                        //alert("Difference is " + hr + ":" + mn);
                    }
                    else {
                        status = false;
                        alert("FROM Time should NOT greater than TO Time")
                    }
                    //New Logic
                    //var end_time = $("#end_time").val();

                    ////convert both time into timestamp
                    //var stt = new Date("November 13, 2013 " + fromTime);
                    //stt = stt.getTime();

                    //var endt = new Date("November 13, 2013 " + toTime);
                    //endt = endt.getTime();

                    ////by this you can see time stamp value in console via firebug
                    //console.log("Time1: " + stt + " Time2: " + endt);

                    //if (stt > endt) {
                    //    //$("#start_time").after('<span class="error"><br>Start-time must be smaller then End-time.</span>');
                    //    //$("#end_time").after('<span class="error"><br>End-time must be bigger then Start-time.</span>');
                    //    alert("Start-time must be smaller then End-time");
                    //    return false;
                    //}
                }

                if (status && $('#validation-form').valid()) {
                    $(".loader-ajax-container").css("display", "block");
                }
                else {
                    return false;
                }

            });

            //$('#datepairExample .time').timepicker({
            //    'showDuration': true,
            //    'timeFormat': 'g:ia'
            //});

            //$('#datepairExample .date').datepicker({
            //    'format': 'm/d/yyyy',
            //    'autoclose': true
            //});

            //$('#datepairExample').datepair();


        });
    </script>
}